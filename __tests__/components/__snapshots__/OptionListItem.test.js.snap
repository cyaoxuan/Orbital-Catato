// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OptionListItem /> renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      false,
      [
        {
          "paddingRight": 24,
          "paddingVertical": 8,
        },
        {
          "borderRadius": 16,
          "height": 65,
          "justifyContent": "center",
          "padding": 16,
        },
      ],
    ]
  }
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginVertical": 6,
        "width": "100%",
      }
    }
  >
    <View
      style={
        [
          {
            "paddingLeft": 16,
          },
          {
            "flex": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "System",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "fontSize": 16,
              },
              {
                "color": "rgba(28, 27, 31, 1)",
              },
              {
                "fontFamily": "Nunito-Medium",
                "fontSize": 20,
              },
            ],
          ]
        }
      />
    </View>
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<OptionListItemIcon /> renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      false,
      [
        {
          "paddingRight": 24,
          "paddingVertical": 8,
        },
        {
          "borderRadius": 16,
          "height": 65,
          "justifyContent": "center",
          "padding": 16,
        },
      ],
    ]
  }
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginVertical": 6,
        "width": "100%",
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      />
    </View>
    <View
      style={
        [
          {
            "paddingLeft": 16,
          },
          {
            "flex": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "System",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "fontSize": 16,
              },
              {
                "color": "rgba(28, 27, 31, 1)",
              },
              {
                "fontFamily": "Nunito-Medium",
                "fontSize": 20,
              },
            ],
          ]
        }
      />
    </View>
    <View
      pointerEvents="box-none"
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<SwitchListItem /> renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      false,
      [
        {
          "paddingRight": 24,
          "paddingVertical": 8,
        },
        {
          "borderRadius": 16,
          "height": 65,
          "justifyContent": "center",
          "padding": 16,
        },
      ],
    ]
  }
>
  <View
    style={
      {
        "flexDirection": "row",
        "marginVertical": 6,
        "width": "100%",
      }
    }
  >
    <View
      style={
        [
          {
            "paddingLeft": 16,
          },
          {
            "flex": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        numberOfLines={1}
        selectable={false}
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "System",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "fontSize": 16,
              },
              {
                "color": "rgba(28, 27, 31, 1)",
              },
              {
                "fontFamily": "Nunito-Medium",
                "fontSize": 20,
              },
            ],
          ]
        }
      />
    </View>
    <RCTSwitch
      accessibilityRole="switch"
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onTintColor="#05668D"
      style={
        [
          {
            "height": 31,
            "width": 51,
          },
          {
            "transform": [
              {
                "scaleX": 1.2,
              },
              {
                "scaleY": 1.2,
              },
            ],
          },
        ]
      }
      tintColor="#05668D"
      value={false}
    />
  </View>
</View>
`;
